<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Sort" Id="{16f756b5-5ff1-40da-88a2-db91540b38c9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Sort
VAR_INPUT
    aValues : REFERENCE TO ARRAY[1..20] OF REAL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="SortAsc" Id="{0615cc1e-39b4-4950-8f5f-d65ed9d46f5f}">
      <Declaration><![CDATA[METHOD PUBLIC SortAsc : BOOL
VAR
    nIndex : INT;
	bSwapped: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[REPEAT
    bSwapped := FALSE;

    FOR nIndex := 1 TO 20 - 1 DO
        IF aValues[nIndex] > aValues[nIndex + 1] THEN
            Swap(nIndex, nIndex + 1);
            bSwapped := TRUE;
        END_IF
    END_FOR
UNTIL NOT bSwapped END_REPEAT

SortAsc := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SortDesc" Id="{2a8f8eb6-bbb6-4e54-b4bd-4ba9a92bcfa7}">
      <Declaration><![CDATA[METHOD PUBLIC SortDesc : BOOL
VAR
    nIndex : INT;
	bSwapped: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[REPEAT
    bSwapped := FALSE;

    FOR nIndex := 1 TO 20 - 1 DO
        IF aValues[nIndex] < aValues[nIndex + 1] THEN
            Swap(nIndex, nIndex + 1);
            bSwapped := TRUE;
        END_IF
    END_FOR
UNTIL NOT bSwapped END_REPEAT

SortDesc := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Swap" Id="{4c892027-a868-4d6f-8934-cd9bf6ba553d}">
      <Declaration><![CDATA[// Swap two variables on given index from array aValue
METHOD PRIVATE Swap
VAR_INPUT
    nIndex1 : INT;
    nIndex2 : INT;
END_VAR
VAR
    // Temporary variable to swap values
    fSwap : REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[fSwap := aValues[nIndex1];

// Assign value of index 2 to index 1
aValues[nIndex1] := aValues[nIndex2];

// Assign value of index 1 to index 2
aValues[nIndex2] := fSwap;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>